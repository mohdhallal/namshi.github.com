<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: conference | Tech @ Namshi.com]]></title>
  <link href="http://namshi.github.io/blog/categories/conference/atom.xml" rel="self"/>
  <link href="http://namshi.github.io/"/>
  <updated>2014-10-21T13:23:40+04:00</updated>
  <id>http://namshi.github.io/</id>
  <author>
    <name><![CDATA[Namshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What went down at SymfonyLive London?]]></title>
    <link href="http://namshi.github.io/blog/2014/10/02/what-went-down-at-symfonylive-london/"/>
    <updated>2014-10-02T12:26:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/10/02/what-went-down-at-symfonylive-london</id>
    <content type="html"><![CDATA[<p>{% img center /images/symfonylive.png 640 640 &lsquo;SymfonyLive&rsquo; &lsquo;SymfonyLive&rsquo; %}
SymfonyLive London 2014 concluded with top-notch presentations from Symfony and industry gurus. It was an exceptional
opportunity being able to attend this conference and meet those people.</p>

<p>Here is my summary about some of the talks I had the chance to attend:</p>

<!-- more -->


<h2>Keynote: Understanding Craftsmanship by <a href="https://twitter.com/_md">Marcello Duarte</a></h2>

<p>Marcello delivered an outstanding keynote presentation on achieving craftsmanship in software.
He provided a walk through the <a href="http://manifesto.softwarecraftsmanship.org/">Software Craftsmanship Manifesto</a>
and how the Agile methodology should have been evolved to consider software craftsmanship as one of its practices.</p>

<p>The talk focused on:</p>

<ul>
<li>Delivering a well crafted software by following good practices such as clean code</li>
<li>Being steadfast by considering yourself a craftsman rather than an executionar</li>
<li>Focusing on the community by having mentors and supporting other programmers</li>
<li>Enhancing productivity by dealing with customers as partners who understand your passion and approach
in delivering code rather than focusing on completing tasks</li>
</ul>


<iframe src="http://namshi.github.io//www.slideshare.net/slideshow/embed_code/39722355" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/marcello.duarte/understanding-craftsmanship" title="Understanding craftsmanship" target="_blank">Understanding craftsmanship</a> </strong> from <strong><a href="http://www.slideshare.net/marcello.duarte" target="_blank">Marcello Duarte</a></strong> </div></p>

<h2>The dependency Trap by <a href="https://twitter.com/jakub_zalas">Jakub Zalas</a></h2>

<p>Jakub explained how bad it can be having a number of services depend on one external service and at a certain point,
when that external service needs to be replaced, you fall into what is called &lsquo;The Dependency Trap&rsquo; due
to high coupling.</p>

<p>The approach to follow in order to avoid such situations is to work on making internal services
loosely coupled from external ones by introducing interfaces and &lsquo;Dependency Inversion&rsquo;. The guidelines
of the Dependency Inversion principal are:</p>

<ul>
<li>High level modules (your services) should not depend on low level ones (libraries) instead, they should
depend on abstractions. In other words, both your services and the library should depend on interfaces that clearly
describe what they are expected to accomplish.</li>
<li>Abstractions should not depend on details. This means that your interface should not be a detail in a possible
more generic interface.</li>
</ul>


<p>Here at Namshi, we are introducing these practices, and as a starting point, we are loosely coupling our services from doctrine. It is
amazing to notice that we are on the right track and addressing industry wide issues!</p>

<h2>The Naked Bundle by <a href="https://twitter.com/matthiasnoback">Matthias Noback</a></h2>

<p>This was one of the most contreversial talks at the confrence! Matthias&rsquo;s goal through this talk was to motivate the symfony
community to start considering the fact that one day, they will be faced with a situation where they have to port their
code to a different framework. Motivated by that fact, he started exploring ways that allow a Symfony2 based codebase to be easily portable
to other frameworks and thus, depend less on the Symfony2 framework itself. Now the good part is that most of Symfony is based on components, however,
Bundles are not. He moves on by trying to introduce workarounds for controllers, entities and templates to reside outside the bundle and create the
&lsquo;Naked Bundle&rsquo;.</p>

<h2>Sylius e-commerce for symfony2 developers by Pawel Jedrzejewski</h2>

<p>A walk through Sylius, a powerful Symfony2 based E-commerce platform. Pawel explained how to start with Sylius, the available
bundles and components it introduces and how it can be used in non-Symfony codebase.</p>

<h2>Decoupling with design patterns and symfony DIC by <a href="https://twitter.com/everzet">Konstantin Kudryashov (everzet)</a></h2>

<p>One of the best presentations that took place at SymfonyLive, Everzet just rocked it! He introduced the techniques he
followed in building Behat v.3. His main goal was to try and deliver the most extensible test framework while
maintaining backword compatibility. He used these goals and techniques as examples on how Symfony2 based projects
should be built.</p>

<p>The main guidelines to achieve decoupling, extensibilty and backword compatibility are to:</p>

<ul>
<li>Avoid premature abstractions.</li>
<li>Close your code for any extensions (by using private attributes and final classes, for example).</li>
<li>When a use case that requires opening up a class or an attribute rises, identify a proper extension point and put lots of thought in it.</li>
<li>Whenever opening up a class or an attribute, keep in mind backward compatibility.</li>
<li>Utilize the Gang of Four design patterns wherever needed!</li>
</ul>


<p>In case of Behat, achieving the framework design goals was done by leveraging compiler passes as extension points and
using Delegation Loop, Decorator, Observer, Compsite, Chain of Responsibility and Adapter patterns. Each pattern was
used wherever necessary, for example, the Adapther pattern achieved the goal of backword compatibility by executing the
required transformation on legacy input and &lsquo;adapt&rsquo; it to the new one.</p>

<p>Basically, the solution to a desing problem must reside in one of the design patterns in the Gang of Four!</p>

<iframe src="http://namshi.github.io//www.slideshare.net/slideshow/embed_code/39591398" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/everzet/decoupling-with-design-patterns-and-symfony2-dic" title="Decoupling with Design Patterns and Symfony2 DIC" target="_blank">Decoupling with Design Patterns and Symfony2 DIC</a> </strong> from <strong><a href="http://www.slideshare.net/everzet" target="_blank">Konstantin Kudryashov</a></strong> </div></p>

<h2>Keynote: Doing Everything With Nothing, Ephemeralization In The Cloud by <a href="https://twitter.com/dzuelke">David Zuelke</a></h2>

<p>A very inspiring talk by David, he walks through the history of the evolution of daily life tools and how they keep doing
more with less (Ephemeralization).
From that point onwords, he explains how this observation relates to the computing world. We see that the cloud is
evolving daily by intorducing enhancements that makes developers' life easier and making them focus on what is important to them.
Infrastructure-as-a-service (IaaS) and Platform-as-a-Service (PaaS) are examples of this evolution. He moves on by introducing heroku,
a PaaS, and how it contributes to this fact by providing out of the box system solutions to developers.</p>

<p>All in all, the talks were inspiring and addressed current issues in web development. Can&rsquo;t wait for SymfonyLive London 2015!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design, Architecture and Code on the edge @Confoo]]></title>
    <link href="http://namshi.github.io/blog/2014/09/22/coding-on-the-edge-at-confoo/"/>
    <updated>2014-09-22T09:01:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/22/coding-on-the-edge-at-confoo</id>
    <content type="html"><![CDATA[<p>At Namshi we run a product that needs to evolve quickly and be ready to change: new features and
technologies are integrated every week to be able to keep up to date with the market and the technology around us.
That&rsquo;s how we started using nodejs, Angular, Docker, SPDY and much more&hellip;</p>

<p><strong>Do you want to hear more?</strong></p>

<!-- more -->


<p>{% img left team /images/alex.jpg %}
<a href="http://tech.namshi.com/team#Alessandro%20Nadalin">Alex</a> submitted a bunch of talks to the 2015 edition of the Confoo conference, so just
<a href="http://confoo.ca/en/call-for-papers/speaker/alessandro-nadalin">vote for his talks</a>.<br>
His talks cover a wide variety of topics from Symfony, Angular, HTTP to Dockerinzing your application.</p>

<p>How cool is that?<br>
If you are looking for sharp and engaging sessions, <strong>these are definitely bound to make you sit up and notice</strong>.</p>

<br>


<br>


<br>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interested in the history of NodeJS? Then let's hear it from Lucio at the ConFoo]]></title>
    <link href="http://namshi.github.io/blog/2014/09/20/interested-in-the-history-of-nodejs-then-lets-hear-it-from-lucio-at-the-confoo/"/>
    <updated>2014-09-20T22:37:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/20/interested-in-the-history-of-nodejs-then-lets-hear-it-from-lucio-at-the-confoo</id>
    <content type="html"><![CDATA[<p>Not really hard to believe, NodeJS is a beloved one among
the plethora of technologies that we use at <a href="https://namshi.com">Namshi</a>;
that&rsquo;s why we got people like <a href="/team#Luciano%20Colosio">Lucio</a> on board so that we
could expand in that direction.</p>

<!-- more -->


<p>{% img left team /images/lucio.jpg Luciano Colosio %}</p>

<p>And you know what? Lucio loves Node so much that he&rsquo;d like
to talk about it at a big stage, like the one the
<a href="http://confoo.ca/">ConFoo</a> of next february.</p>

<p>Then don&rsquo;t miss the chance to
<a href="http://confoo.ca/en/call-for-papers/speaker/luciano-colosio">vote one of his proposals</a>
as he&rsquo;d be very happy to introduce you the history of NodeJS
(I heard part of that talk, since he already gave it internally
for the Namshi team, and I have to admit it was freaking
interesting), how it was born and what pushed
<a href="http://www.quora.com/Who-is-Ryan-Dahl">Rian Dahl</a> to write
this beautiful platform; the other talk that he has in the
pipeline is a good introduction on how to embrace the
non-blocking paradigm and he will explain how to make sure
that you treat the Event Loop responsibly :)</p>

<p>Definitely worth it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stop using crons, start listening to Geshan]]></title>
    <link href="http://namshi.github.io/blog/2014/09/20/stop-using-crons-start-listening-to-geshan/"/>
    <updated>2014-09-20T12:15:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/20/stop-using-crons-start-listening-to-geshan</id>
    <content type="html"><![CDATA[<p><a href="/team#Geshan%20Manandhar">Geshan</a> has decided
he can&rsquo;t stand seeing people struggling with
crons anymore, therefore he decided to give it a
shot at the <a href="http://confoo.ca/en/call-for-papers/speaker/geshan-manandhar">2015 edition of the confoo</a>.</p>

<!-- more -->


<p>{% img right team /images/geshan.jpg %}</p>

<p>If you want to hear how Symfony integrates (so) nicely
with messaging queues and, specifically, with RabbitMQ
don&rsquo;t waste a second and <a href="http://confoo.ca/en/call-for-papers/speaker/geshan-manandhar">vote his talk</a>
so that he can get the chance to take the stage at the
canadian conference.</p>

<p>He will talk about our <strong>direct experience with RabbitMQ</strong>,
including <strong>MQ best practices</strong> and an overview of the
available tools, so that the audience will be able to
understand the theory, see how it works in practice
and form his own opinion.</p>

<p>Well done Geshan, we hope to hear how Namshi handles
gazilions of messages in Canada!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wanna hear about SOA and how we deal with APIs? Then vote for cirpo!]]></title>
    <link href="http://namshi.github.io/blog/2014/09/16/wanna-hear-about-soa-and-how-we-deal-with-apis-then-vote-for-cirpo/"/>
    <updated>2014-09-16T09:02:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/16/wanna-hear-about-soa-and-how-we-deal-with-apis-then-vote-for-cirpo</id>
    <content type="html"><![CDATA[<p>Aaaaand following our first announcement
regarding <a href="/blog/2014/09/10/what-is-frontend-first-lets-hear-it-at-the-next-edition-of-the-confoo/">&ldquo;conquering&rdquo; the ConFoo</a>,
as promised, we go ahead with the second
charge!</p>

<!-- more -->


<p>{% img team right /images/cirpo.jpg %}</p>

<p><a href="/team">Cirpo</a> has decided to capitalize on
the opportunity of being in the cold lands of
Canada to offer <strong>a few</strong> learning opportunities
for the attendees, as
<a href="http://confoo.ca/en/call-for-papers/speaker/alessandro-cinelli">the list of his proposals</a>
is quite long and impressive.</p>

<p>If you are willing to hear how we do web services
and how we integrated an <strong>API-first</strong> approach then
don&rsquo;t miss the opportunity to rate his talks, as I&rsquo;m
sure he&rsquo;d be happy to showcase our best practices and
hear your feedbacks and suggestions, to make Namshi&rsquo;s
SOA even sharper; along with these topics he&rsquo;ll be
happy to talk about some of the other tools and systems
we use like Redis and RabbitMQ.</p>

<p>But even more important, <a href="http://confoo.ca/en/register">grab your ticket</a> for the
event as I can ensure you it&rsquo;s one of a kind and you won&rsquo;t
regret it!</p>
]]></content>
  </entry>
  
</feed>
